# OpenAI connection Configuration
spring.application.name=template-spring-ai

# OpenAI Chat Options
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.base-url=https://api.openai.com
spring.ai.openai.chat.options.model=gpt-4o-audio-preview
spring.ai.openai.chat.options.output-modalities=text,audio

###
# Audio parameters for the audio generation.
# Required when audio output is requested with output-modalities: audio.
# Requires the gpt-4o-audio-preview model
# and is not supported for streaming completions.
###
spring.ai.openai.chat.options.output-audio.voice=ONYX
spring.ai.openai.chat.options.output-audio.format=WAV


# Chroma Vector Store connection properties
#spring.ai.vectorstore.chroma.client.host=http://localhost
#spring.ai.vectorstore.chroma.client.port=8000
#spring.ai.vectorstore.chroma.client.key-token=
#spring.ai.vectorstore.chroma.client.username=
#spring.ai.vectorstore.chroma.client.password=
# Chroma Vector Store collection properties
spring.ai.vectorstore.chroma.initialize-schema=true
spring.ai.vectorstore.chroma.collection-name=my-vector-store

# Docker compose for local vector store
spring.docker.compose.file=./template-spring-ai/docker/compose.yaml

# Default upload file size was 1MB, increase to 10MB
spring.servlet.multipart.max-file-size=10MB

# Application Configuration
template.openai.prompt.system=classpath:/openai/prompt/system.txt


# MCP Configuration
# Server identification
spring.ai.mcp.server.name=my-weather-server
spring.ai.mcp.server.version=0.0.1

# Server type (SYNC/ASYNC)
spring.ai.mcp.server.type=SYNC

# Transport configuration
spring.ai.mcp.server.stdio=false
spring.ai.mcp.server.sse-message-endpoint=/mcp/message

# Change notifications
spring.ai.mcp.server.resource-change-notification=true
spring.ai.mcp.server.tool-change-notification=true
spring.ai.mcp.server.prompt-change-notification=true

# Logging (required for STDIO transport)
spring.main.banner-mode=off
logging.pattern.console=
logging.file.name=./target/starter-webmvc-server.log